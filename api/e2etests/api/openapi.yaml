openapi: 3.0.3
info:
  contact:
    email: contact@mightycode.fr
    url: https://mightycode.fr/
  description: |
    This is a prototype of CPOO Project's front/back API.
  title: CPOO Server API
  version: 0.0.1
servers:
- url: http://localhost:8080/
security:
- CookieAuth: []
tags:
- description: User authentication.
  name: authentication
paths:
  /user/signup:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      security: []
      tags:
      - authentication
      x-content-type: application/json
      x-accepts: application/json
  /user/signin:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: Success
          headers:
            Set-Cookie:
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      security: []
      tags:
      - authentication
      x-content-type: application/json
      x-accepts: application/json
  /user/signout:
    post:
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      tags:
      - authentication
      x-accepts: application/json
  /user/{username}:
    delete:
      description: Delete the account of the user matching the given username. Only
        the administrator can use this endpoint.
      parameters:
      - description: username of the user account to delete.
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "404":
          description: "Not found: User account not found."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      summary: Delete a user account
      tags:
      - administration
      x-accepts: application/json
  /user/forgotpwd:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPasswordDTO'
        required: true
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      tags:
      - authentication
      x-content-type: application/json
      x-accepts: application/json
  /user/currentuser:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      tags:
      - authentication
      x-accepts: application/json
  /user/settings:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsDTO'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      summary: Get user settings information
      tags:
      - user settings
      x-accepts: application/json
  /user/account/chgusername:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      tags:
      - user settings
      x-content-type: application/json
      x-accepts: application/json
  /user/account/changepp:
    patch:
      requestBody:
        content:
          text/plain:
            schema:
              title: url
              type: string
        required: true
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      tags:
      - user settings
      x-content-type: text/plain
      x-accepts: application/json
  /user/changepwd:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDTO'
        required: true
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      tags:
      - user settings
      x-content-type: application/json
      x-accepts: application/json
  /user/notifications:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsDTO'
        required: true
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      tags:
      - user settings
      x-content-type: application/json
      x-accepts: application/json
  /user/change-theme:
    patch:
      requestBody:
        content:
          text/plain:
            schema:
              title: themeId
        required: true
      responses:
        "200":
          description: Theme changed successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      summary: Change user theme
      tags:
      - user settings
      x-content-type: text/plain
      x-accepts: application/json
  /user/language:
    patch:
      requestBody:
        content:
          text/plain:
            schema:
              title: language
              type: string
        required: true
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      tags:
      - user settings
      x-content-type: text/plain
      x-accepts: application/json
  /discussions:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DiscussionDTO'
                type: array
          description: Successful response
      summary: Get a list of all discussions of the current user
      tags:
      - messaging
      x-accepts: application/json
    patch:
      requestBody:
        content:
          text/plain:
            schema:
              title: discussionID
              type: string
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: int64
                type: integer
          description: Timestamp change successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      summary: Set timestamp to actual time
      tags:
      - messaging
      x-content-type: text/plain
      x-accepts: application/json
    post:
      requestBody:
        content:
          text/plain:
            schema:
              title: user
              type: string
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscussionDTO'
          description: Conversation created successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      summary: Create a new discussion with a user
      tags:
      - messaging
      x-content-type: text/plain
      x-accepts: application/json
  /discussions/unreadmessage:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnreadMessageDTO'
        required: true
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      summary: Change unread message parameter
      tags:
      - messaging
      x-content-type: application/json
      x-accepts: application/json
  /discussions/{discussion_id}/messages:
    get:
      parameters:
      - explode: false
        in: path
        name: discussion_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageDTO'
                type: array
          description: Successful response
      summary: Get all messages in a discussion
      tags:
      - messaging
      x-accepts: application/json
  /discussions/message:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDTO'
          description: "Success: a message is available"
        "202":
          description: "Accepted: no message available yet"
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      summary: Receive a message
      tags:
      - messaging
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMessageDTO'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDTO'
          description: Message sent successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
          description: Error
      summary: Send a message in a disccusion
      tags:
      - messaging
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    UserDTO:
      example:
        password: pass
        email: alice@mymail.com
        username: alice
      properties:
        username:
          example: alice
          type: string
        email:
          example: alice@mymail.com
          type: string
        password:
          example: pass
          type: string
      required:
      - email
      - password
      - username
      type: object
    UserSettingsDTO:
      example:
        notificationSound: true
        theme: 2
        language: english
        profileImage: profileImage
        unreadBadges: true
      properties:
        theme:
          example: 2
          type: integer
        language:
          example: english
          type: string
        unreadBadges:
          type: boolean
        notificationSound:
          type: boolean
        profileImage:
          type: string
      required:
      - language
      - notificationSound
      - profileImage
      - theme
      - unreadBadges
      type: object
    PostMessageDTO:
      description: Message to send
      example:
        to: bob@acme
        type: text/plain
        body: This is the message
      properties:
        to:
          example: bob@acme
          type: string
        type:
          example: text/plain
          format: mime
          type: string
        body:
          example: This is the message
          type: string
      required:
      - body
      - to
      - type
      type: object
    MessageDTO:
      allOf:
      - $ref: '#/components/schemas/PostMessageDTO'
      - properties:
          id:
            example: 667bdc23-3de4-482f-a0f4-3391452a7742
            format: uuid
            type: string
          timestamp:
            example: 1720294759999
            format: int64
            type: integer
          from:
            example: alice@acme
            type: string
        type: object
    DiscussionDTO:
      example:
        user1: alice@acme
        user2: bob@acme
        unreadMessage: true
        id: 667bdc23-3de4-482f-a0f4-3391452a7742
        timestamp: 1720294759999
      properties:
        id:
          example: 667bdc23-3de4-482f-a0f4-3391452a7742
          format: uuid
          type: string
        timestamp:
          example: 1720294759999
          format: int64
          type: integer
        user1:
          example: alice@acme
          type: string
        user2:
          example: bob@acme
          type: string
        unreadMessage:
          type: boolean
      type: object
    NewPasswordDTO:
      example:
        password: pass
        code: 1549
        email: alice@mymail.com
      properties:
        email:
          example: alice@mymail.com
          type: string
        code:
          example: 1549
          type: integer
        password:
          example: pass
          type: string
      type: object
    ChangePasswordDTO:
      example:
        oldpassword: oldpassword
        newpassword: newpassword
      properties:
        oldpassword:
          example: oldpassword
          type: string
        newpassword:
          example: newpassword
          type: string
      type: object
    NotificationsDTO:
      example:
        badges: true
        sounds: true
      properties:
        sounds:
          type: boolean
        badges:
          type: boolean
      type: object
    UnreadMessageDTO:
      example:
        discussionId: 667bdc23-3de4-482f-a0f4-3391452a7742
        unreadMessage: false
      properties:
        discussionId:
          example: 667bdc23-3de4-482f-a0f4-3391452a7742
          format: uuid
          type: string
        unreadMessage:
          example: false
          type: boolean
      required:
      - discussionId
      - unread_message
      type: object
    ErrorDTO:
      description: Error information
      properties:
        timestamp:
          description: Timestamp of the error
          example: 2023-10-03T14:53:59.870+00:00
          type: string
        status:
          description: HTTP response status
          example: 401
          type: integer
        error:
          description: HTTP response error
          example: Unauthorized
          type: string
        message:
          description: HTTP response message
          example: Bad credentials
          type: string
        path:
          description: Path of the endpoint called
          example: /user/signin
          type: string
      type: object
  securitySchemes:
    CookieAuth:
      description: Use a session cookie to authenticate (see /login).
      in: cookie
      name: JSESSIONID
      type: apiKey
x-samples-languages:
- curl
- javascript
- node
- java
- python
- php

